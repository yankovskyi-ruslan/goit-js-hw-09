{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAvCcQ,SAASC,cAAc,SAC/BC,iBAAiB,UAE9B,SAA8BC,GAC5BA,EAAEC,iBACF,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhBb,MAAOkB,EAASL,EAATK,KACjBC,EAAeR,EAAEG,OAAOM,iBAC1BC,EAAYC,OAAOL,EAAMM,OAE2EJ,EAA3FK,UAAW,EACxB,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAOO,MAAOE,GAAK,EACtC3B,EAAc2B,EAAGJ,GACdK,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBJ,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE9D+B,OAAM,SAAAJ,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBJ,EAAAgC,OAAOI,QAAQ,sBAAuCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAEhEqB,GAAaC,OAAOJ,EAAKK,OAO3BhB,YAAW,WACTY,EAAaK,UAAW,C,GACvBH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst promisesForm = document.querySelector('.form');\npromisesForm.addEventListener('submit', onPromisesFormSubmit);\n\nfunction onPromisesFormSubmit(e) {\n  e.preventDefault();\n  const { amount, delay, step } = e.target.elements;\n  const submitButton = e.target.lastElementChild\n  let delayTime = Number(delay.value)\n  // Спосіб заборони зайвого кліку по формі під час виконання функції за допомогою відключення кнопки на час виконання функції\n  submitButton.disabled = true;\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delayTime)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayTime += Number(step.value);\n  }\n\n  // Спосіб заборони зайвого кліку по формі під час виконання функції за допомогою очищення форми\n  // e.target.reset();\n\n  // Спосіб заборони зайвого кліку по формі під час виконання функції за допомогою відключення кнопки на час виконання функції\n  setTimeout(() => { \n    submitButton.disabled = false;\n  }, delayTime)\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","amount","delay1","step","submitButton","lastElementChild","delayTime","Number","value","disabled","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a2ce1d43.js.map"}